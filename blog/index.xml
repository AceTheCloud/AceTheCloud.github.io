<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ace The Cloud Blog on Ace the Cloud Skills</title>
    <link>https://acethecloud.com/blog/</link>
    <description>Recent content in Ace The Cloud Blog on Ace the Cloud Skills</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 31 Aug 2020 20:33:11 +0600</lastBuildDate><atom:link href="https://acethecloud.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Amabassador Pattern</title>
      <link>https://acethecloud.com/blog/amabassador-pattern/</link>
      <pubDate>Sun, 04 Dec 2022 17:38:27 +0530</pubDate>
      
      <guid>https://acethecloud.com/blog/amabassador-pattern/</guid>
      <description>Resilient cloud-based applications require features such as circuit breaking, routing, metering and monitoring, and the ability to make network-related configuration updates. It may be difficult or impossible to update legacy applications or existing code libraries to add these features, because the code is no longer maintained or can&amp;rsquo;t be easily modified by the development team.
Network calls may also require substantial configuration for connection, authentication, and authorization. If these calls are used across multiple applications, built using multiple languages and frameworks, the calls must be configured for each of these instances.</description>
    </item>
    
    <item>
      <title>Famous GoLang Frameworks</title>
      <link>https://acethecloud.com/blog/famous-golang-frameworks/</link>
      <pubDate>Mon, 07 Nov 2022 20:18:07 +0600</pubDate>
      
      <guid>https://acethecloud.com/blog/famous-golang-frameworks/</guid>
      <description>Go is a multiparadigm, statically-typed, and compiled programming language designed by Google. It is similar to C, and if you’re a fan of C, this can be an easy language to pick up. Many developers have embraced this language because of its garbage collection, memory safety, and structural typing system.
Why use Go? Before reviewing five top Go frameworks, what is Go truly used for? Aside from building general web applications, the language’s scope encompasses a wide range of use cases:</description>
    </item>
    
    <item>
      <title>Cloud Native vs Cloud Agnostic</title>
      <link>https://acethecloud.com/blog/cloud-native-vs-cloud-agnostic/</link>
      <pubDate>Sun, 04 Apr 2021 20:18:07 +0600</pubDate>
      
      <guid>https://acethecloud.com/blog/cloud-native-vs-cloud-agnostic/</guid>
      <description>Background Speed ​​is an important factor for business in this era when customers are looking for instant gratification. If the fact doesn&amp;rsquo;t convince you, the statistics might. An element as simple as a website&amp;rsquo;s load time carries weight. Statistics indicate that the first five seconds of a page load time have the greatest impact on conversion rates. So when consumer behavior has the greatest impact, it is profitable in the long run to modernize a business model accordingly.</description>
    </item>
    
    <item>
      <title>Service Mesh and Istio</title>
      <link>https://acethecloud.com/blog/service-mesh-and-istio/</link>
      <pubDate>Mon, 07 Sep 2020 20:18:07 +0600</pubDate>
      
      <guid>https://acethecloud.com/blog/service-mesh-and-istio/</guid>
      <description>Background A lot has changed about how we built microservices, and most people have no choice but to deploy microservices as pods in Kubernetes. Let us take an example where we are running a web application that queries data for the products. If both of these functionalities were on the webserver, then a calculation could slow the response time of the web pages. Having it on a seperate server avoids this problem.</description>
    </item>
    
  </channel>
</rss>
