<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Ace The Cloud Skills</title><link>https://acethecloud.com/tags/programming/</link><description>Recent content in programming on Ace The Cloud Skills</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 09 Feb 2023 17:38:27 +0530</lastBuildDate><atom:link href="https://acethecloud.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Object-Oriented Programming in Go: Understanding Structs, Methods, and More</title><link>https://acethecloud.com/blog/object-oriented-programming-in-golang/</link><pubDate>Thu, 09 Feb 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/object-oriented-programming-in-golang/</guid><description>Go language is a statically typed language that supports the principles of Object-Oriented Programming (OOP). Go’s OOP implementation is a bit different from traditional OOP languages like Java, Python, and Ruby, as it does not have classes. Instead, it uses a type-based inheritance mechanism, called “struct embedding”, to achieve inheritance-like behavior.
In Go, a struct is a composite data type that can have fields, methods, and other properties. The fields of a struct represent the state of an object, while the methods of a struct represent the behavior of an object.</description></item><item><title>10 mistakes those should be avoided in GoLang</title><link>https://acethecloud.com/blog/10-mistakes-those-should-be-avoided-in-golang/</link><pubDate>Mon, 09 Jan 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/10-mistakes-those-should-be-avoided-in-golang/</guid><description>Go is a statically typed, concurrent, garbage-collected programming language developed at Google. It has gained popularity in recent years due to its simplicity, performance, and strong support for concurrency. Despite its simplicity, there are still some common mistakes that developers make when writing Go code. Here are the top 10 bad mistakes to be avoided in Go, along with code examples for each of them:
Not checking for errors Go functions often return multiple values, with the second value being an error.</description></item><item><title>9 Features of Spring Cloud</title><link>https://acethecloud.com/blog/9-features-of-spring-cloud/</link><pubDate>Mon, 09 Jan 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/9-features-of-spring-cloud/</guid><description>Spring Cloud is a framework for building microservices-based applications on the Spring platform. It provides tools and services for distributed systems, including service registration and discovery, routing, load balancing, circuit breakers, and more. In this blog post, we’ll cover these features in depth, including code examples in Java for each of them.
Distributed/versioned configuration Service registration and discovery Routing Service-to-service calls Load balancing Circuit Breakers Global locks Leadership election and cluster state Distributed messaging 1.</description></item></channel></rss>