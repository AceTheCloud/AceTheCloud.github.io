<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on Ace The Cloud Skills</title><link>https://acethecloud.com/tags/programming/</link><description>Recent content in programming on Ace The Cloud Skills</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Sep 2023 17:38:27 +0530</lastBuildDate><atom:link href="https://acethecloud.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Why You Rarely Need ElasticSearch When You Have PostgreSQL</title><link>https://acethecloud.com/blog/why-you-rarely-need-elastic/</link><pubDate>Fri, 01 Sep 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/why-you-rarely-need-elastic/</guid><description>Why You Rarely Need ElasticSearch When You Have PostgreSQL ElasticSearch is a popular open-source search engine that provides fast and scalable full-text search capabilities. It is often used as a complement to relational databases, such as PostgreSQL, to enable complex queries and analytics on large and dynamic datasets. However, ElasticSearch also comes with some drawbacks and challenges, such as data duplication, synchronization issues, security risks, and operational overhead. In this post, I will argue that you rarely need ElasticSearch when you have PostgreSQL, as PostgreSQL already offers powerful and flexible full-text search features that can meet most of your search needs.</description></item><item><title>Mastering feature flagging with ReactJs, Golang, and Github Actions</title><link>https://acethecloud.com/blog/mastering-feature-flagging-with-reactjs-golang-and-github-actions/</link><pubDate>Thu, 09 Mar 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/mastering-feature-flagging-with-reactjs-golang-and-github-actions/</guid><description>Feature flagging is a technique used in software development to turn on and off certain features within an application, without requiring a full deployment. This can be useful for testing new features or providing different experiences to different groups of users. In this blog post, we will show you how to master feature flagging using ReactJs, Golang, and Github Actions.
Step 1: Define the feature flag
The first step in mastering feature flagging is to define the flag.</description></item><item><title>Object-Oriented Programming in Go: Understanding Structs, Methods, and More</title><link>https://acethecloud.com/blog/object-oriented-programming-in-golang/</link><pubDate>Thu, 09 Feb 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/object-oriented-programming-in-golang/</guid><description>Go language is a statically typed language that supports the principles of Object-Oriented Programming (OOP). Go’s OOP implementation is a bit different from traditional OOP languages like Java, Python, and Ruby, as it does not have classes. Instead, it uses a type-based inheritance mechanism, called “struct embedding”, to achieve inheritance-like behavior.
In Go, a struct is a composite data type that can have fields, methods, and other properties. The fields of a struct represent the state of an object, while the methods of a struct represent the behavior of an object.</description></item><item><title>10 mistakes those should be avoided in GoLang</title><link>https://acethecloud.com/blog/10-mistakes-those-should-be-avoided-in-golang/</link><pubDate>Mon, 09 Jan 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/10-mistakes-those-should-be-avoided-in-golang/</guid><description>Go is a statically typed, concurrent, garbage-collected programming language developed at Google. It has gained popularity in recent years due to its simplicity, performance, and strong support for concurrency. Despite its simplicity, there are still some common mistakes that developers make when writing Go code. Here are the top 10 bad mistakes to be avoided in Go, along with code examples for each of them:
Not checking for errors Go functions often return multiple values, with the second value being an error.</description></item><item><title>9 Features of Spring Cloud</title><link>https://acethecloud.com/blog/9-features-of-spring-cloud/</link><pubDate>Mon, 09 Jan 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/9-features-of-spring-cloud/</guid><description>Spring Cloud is a framework for building microservices-based applications on the Spring platform. It provides tools and services for distributed systems, including service registration and discovery, routing, load balancing, circuit breakers, and more. In this blog post, we’ll cover these features in depth, including code examples in Java for each of them.
Distributed/versioned configuration Service registration and discovery Routing Service-to-service calls Load balancing Circuit Breakers Global locks Leadership election and cluster state Distributed messaging 1.</description></item><item><title>Eliminating Data Loss in AWS Serverless Architectures with the Outbox Pattern</title><link>https://acethecloud.com/blog/outbox-pattern-in-aws-serverless/</link><pubDate>Mon, 09 Jan 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/outbox-pattern-in-aws-serverless/</guid><description>As organizations continue to migrate their applications to the cloud, serverless architectures have become increasingly popular due to their scalability, cost-effectiveness, and ease of deployment. However, with the benefits of serverless comes the challenge of ensuring data consistency and minimizing data loss.
One solution to this challenge is the Outbox Pattern. This pattern ensures that any changes made to the system are recorded in a reliable data store, making it possible to recover data in the event of an outage.</description></item></channel></rss>