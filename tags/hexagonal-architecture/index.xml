<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hexagonal-architecture on Ace The Cloud Skills</title><link>https://acethecloud.com/tags/hexagonal-architecture/</link><description>Recent content in hexagonal-architecture on Ace The Cloud Skills</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 21 Mar 2023 22:18:07 +0600</lastBuildDate><atom:link href="https://acethecloud.com/tags/hexagonal-architecture/index.xml" rel="self" type="application/rss+xml"/><item><title>Hexagonal Architecture in GoLang 👨🏼‍💻</title><link>https://acethecloud.com/blog/hexagonal-architecture-in-golang/</link><pubDate>Tue, 21 Mar 2023 22:18:07 +0600</pubDate><guid>https://acethecloud.com/blog/hexagonal-architecture-in-golang/</guid><description>Hexagonal architecture, also known as Ports and Adapters architecture, is a software design pattern that aims to separate an application&amp;rsquo;s core business logic from its external dependencies. The pattern was first introduced by Alistair Cockburn in 2005, and it has since become a popular choice for building scalable, maintainable, and testable software systems.
In GoLang, hexagonal architecture can be particularly useful for distributed applications because of its emphasis on modularity and simplicity.</description></item></channel></rss>