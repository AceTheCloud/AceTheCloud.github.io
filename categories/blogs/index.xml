<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blogs on Ace The Cloud Skills</title><link>https://acethecloud.com/categories/blogs/</link><description>Recent content in blogs on Ace The Cloud Skills</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 09 Jan 2023 17:38:27 +0530</lastBuildDate><atom:link href="https://acethecloud.com/categories/blogs/index.xml" rel="self" type="application/rss+xml"/><item><title>9 Features of Spring Cloud</title><link>https://acethecloud.com/blog/9-features-of-spring-cloud/</link><pubDate>Mon, 09 Jan 2023 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/9-features-of-spring-cloud/</guid><description>Spring Cloud is a framework for building microservices-based applications on the Spring platform. It provides tools and services for distributed systems, including service registration and discovery, routing, load balancing, circuit breakers, and more. In this blog post, weâ€™ll cover these features in depth, including code examples in Java for each of them.
Distributed/versioned configuration Service registration and discovery Routing Service-to-service calls Load balancing Circuit Breakers Global locks Leadership election and cluster state Distributed messaging 1.</description></item><item><title>Amabassador Pattern</title><link>https://acethecloud.com/blog/amabassador-pattern/</link><pubDate>Fri, 09 Dec 2022 17:38:27 +0530</pubDate><guid>https://acethecloud.com/blog/amabassador-pattern/</guid><description>Resilient cloud-based applications require features such as circuit breaking, routing, metering and monitoring, and the ability to make network-related configuration updates. It may be difficult or impossible to update legacy applications or existing code libraries to add these features, because the code is no longer maintained or can&amp;rsquo;t be easily modified by the development team.
Network calls also require substantial configuration for connection, authentication, and authorization. If these calls are used across multiple applications, built using multiple languages and frameworks, the calls must be configured for each of these instances.</description></item></channel></rss>