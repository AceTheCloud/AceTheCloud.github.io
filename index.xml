<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ace the Cloud Skills</title>
    <link>https://acethecloud.com/</link>
    <description>Recent content on Ace the Cloud Skills</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Nov 2022 20:18:07 +0600</lastBuildDate><atom:link href="https://acethecloud.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Famous GoLang Frameworks</title>
      <link>https://acethecloud.com/blog/famous-golang-frameworks/</link>
      <pubDate>Mon, 07 Nov 2022 20:18:07 +0600</pubDate>
      
      <guid>https://acethecloud.com/blog/famous-golang-frameworks/</guid>
      <description>Go is a multiparadigm, statically-typed, and compiled programming language designed by Google. It is similar to C, and if you’re a fan of C, this can be an easy language to pick up. Many developers have embraced this language because of its garbage collection, memory safety, and structural typing system.
Why use Go? Before reviewing five top Go frameworks, what is Go truly used for? Aside from building general web applications, the language’s scope encompasses a wide range of use cases:</description>
    </item>
    
    <item>
      <title>Service Mesh and Istio</title>
      <link>https://acethecloud.com/blog/service-mesh-and-istio-copy-2/</link>
      <pubDate>Mon, 07 Sep 2020 20:18:07 +0600</pubDate>
      
      <guid>https://acethecloud.com/blog/service-mesh-and-istio-copy-2/</guid>
      <description>Background A lot has changed about how we built microservices, and most people have no choice but to deploy microservices as pods in Kubernetes. Let us take an example where we are running a web application that queries data for the products. If both of these functionalities were on the webserver, then a calculation could slow the response time of the web pages. Having it on a seperate server avoids this problem.</description>
    </item>
    
    <item>
      <title>Service Mesh and Istio</title>
      <link>https://acethecloud.com/blog/service-mesh-and-istio/</link>
      <pubDate>Mon, 07 Sep 2020 20:18:07 +0600</pubDate>
      
      <guid>https://acethecloud.com/blog/service-mesh-and-istio/</guid>
      <description>Background A lot has changed about how we built microservices, and most people have no choice but to deploy microservices as pods in Kubernetes. Let us take an example where we are running a web application that queries data for the products. If both of these functionalities were on the webserver, then a calculation could slow the response time of the web pages. Having it on a seperate server avoids this problem.</description>
    </item>
    
    <item>
      <title>Privacy &amp; Policy</title>
      <link>https://acethecloud.com/privacy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://acethecloud.com/privacy/</guid>
      <description>It is apsho’s policy to respect your privacy regarding any information we may collect while operating our website. This Privacy Policy applies to apsho.com (hereinafter, “us”, “we”, or “apsho.com”). We respect your privacy and are committed to protecting personally identifiable information you may provide us through the Website. We have adopted this privacy policy (“Privacy Policy”) to explain what information may be collected on our Website, how we use this information, and under what circumstances we may disclose the information to third parties.</description>
    </item>
    
  </channel>
</rss>
